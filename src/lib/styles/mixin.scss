@use 'src/lib/styles/animation' as animation;

%after-before {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  opacity: 0;
  content: '';
}

@mixin pulse(
  $box-shadow: var(--pulse-box-shadow, var(--box-shadow-raised-2)),
  $duration: var(--pulse-duration, 4s),
  $delay: var(--pulse-delay, 2s),
  $iteration: infinite
) {
  &::after,
  &::before {
    @extend %after-before;

    box-shadow: $box-shadow;
  }

  &::before {
    animation: pulse $duration linear $iteration;
  }

  &::after {
    animation: pulse $duration linear $delay $iteration;
  }

  &.pressed,
  &:focus-visible,
  &:hover,
  &:active {
    &::after,
    &::before {
      animation-direction: reverse;
    }
  }

  @include animation.pulse;
}

@mixin coalesce(
  $box-shadow: var(--coalesce-box-shadow, var(--box-shadow-raised-2)),
  $duration: var(--coalesce-duration, 4s),
  $delay: var(--coalesce-delay, 2s),
  $iteration: infinite
) {
  &::after,
  &::before {
    @extend %after-before;

    box-shadow: $box-shadow;
  }

  &::before {
    animation: coalesce $duration linear $iteration;
  }

  &::after {
    animation: coalesce $duration linear $delay $iteration;
  }

  &.pressed,
  &:focus-visible,
  &:hover,
  &:active {
    &::after,
    &::before {
      animation-direction: reverse;
    }
  }

  @include animation.coalesce;
}

@mixin border-rotate(
  $background-color: var(--background-color),
  $border-color: var(--border-color-hover),
  $border-width: 1px,
  $speed: 3s,
  $easing: linear,
  $transition: (
    1s --source-color,
    1s --target-color,
  )
) {
  --source-color: #{$background-color};
  --target-color: #{$border-color};

  background:
    linear-gradient($background-color, $background-color) padding-box,
    conic-gradient(from var(--angle), var(--source-color), var(--target-color)) border-box;
  border: $border-width solid transparent;
  transition: $transition;
  animation: $speed rotate $easing infinite;

  &.filled {
    --source-color: var(--target-color);
  }

  &.empty {
    --target-color: transparent;
  }

  @include animation.rotate;
}

@mixin border-progress(
  $background-color: var(--background-color),
  $border-color: var(--border-color-hover),
  $border-width: 1px,
  $transition: --progress,
  $speed: 2s,
  $easing: var(--transition-bezier)
) {
  background:
    linear-gradient($background-color, $background-color) padding-box,
    conic-gradient($border-color, $border-color var(--progress), transparent var(--progress)) border-box;
  border: $border-width solid transparent;
  transition: $transition $speed $easing;
}

@mixin skeleton($color: var(--skeleton-color), $timing: 3s, $easing: var(--transition-skeleton)) {
  --skeleton-color-start: #{$color};
  --skeleton-color-end: oklch(from #{$color} calc(l + 0.1) c h);

  color: var(--skeleton-color-start);
  background-color: var(--skeleton-color-start);
  border-color: var(--skeleton-color-start);
  transition:
    background-color 1s,
    color 1s,
    border-color 1s;
  animation: skeleton $timing $easing infinite;

  @include animation.skeleton;
}
